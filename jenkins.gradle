boolean isInJeknins() {
    Map<String, String> map = System.getenv()

    if (map == null) {
        return false
    }
    String str = map.get("Path")
    if (str != null) {
        return false;
    } else {
        str = ""
        Iterator it = map.iterator();
        while (it.hasNext()) {
            str += it.next();
        }
        if (str.contains("jenkins")) {
            return true
        } else {
            return false;
        }
    }
    return false
}

task savepushinfo << {
    if (isInJeknins()) {
        ext.env = System.getenv()
        def buildNumber = env.BUILD_NUMBER?.toInteger()
        def nodeLabels = env.NODE_LABELS?.toString()
        def jobName = env.JOB_NAME?.toString()
        def buildType = env.BUILD_TYPE?.toString()
        def buildUrl = env.BUILD_URL?.toString()

        def urls = ""
        def path = buildUrl + "artifact/app/build/outputs/apk/"
        File dingding = new File('dingding.json')
        File file1 = new File('app/build/outputs/apk')
        file1.listFiles().findAll{
            urls = urls + "[" + it.name + "](" + path + it.name+")"
        }
        def json = "{" +
                " \"msgtype\": \"markdown\"," +
                " \"markdown\": {" +
                " \"title\":\"构建信息\",\n" +
                " \"text\":\"#### ["+ buildNumber +"]  构建信息 \n" +
                " 项目名称：" + jobName + "\n" +
                " > 下载地址： \n" +
                " >  " + urls + "\n \"" +
                "     }" +
                " }"
        dingding.deleteOnExit()
        dingding.createNewFile()
        dingding.write(json)

    }
}

savepushinfo.dependsOn {
    tasks.findAll {
        task -> !task.name.contentEquals("savepushinfo")
    }
}